---

  - name: Revert VM to "Fresh" snapshot
    vmware_guest_snapshot:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ vcenter_datacenter }}"
      folder: "{{ vcenter_folder }}"
      name: "{{ vcenter_vm_name }}"
      state: revert
      snapshot_name: "{{ vcenter_snapshot_name }}"
      validate_certs: no
    delegate_to: localhost
    when: when downstream|bool and install_foreman|bool

  - name: Wait two minutes for VM to recover from snapshot restore
    wait_for: timeout=120
    delegate_to: localhost

  - name: Ping host to make sure it is responding
    ping: 
    when: when downstream|bool and install_foreman|bool
    delegate_to: localhost

  - name: Put Satellite SELinux into permissive
    selinux:
      policy: targeted
      state: permissive
    when: when downstream|bool and install_foreman|bool

  - name: Install Dogfood bootstrap rpm
    yum:
      name: https://dogfood.sat.engineering.redhat.com/pub/katello-ca-consumer-latest.noarch.rpm
      state: present
      validate_certs: no
    when: when downstream|bool and install_foreman|bool

  - name: Register to Dogfood latest snap
    command: subscription-manager register --org Sat6-CI --activationkey 'satellite-6.6.0-qa-rhel7'
    register: sub-dogfood
    when: when downstream|bool and install_foreman|bool

  - name: Update OS packages
    yum:
      name: '*'
      state: latest
    when: when downstream|bool and install_foreman|bool
    
  - name: Install @Base group to be compliant with docs.
    yum:
      name: "@base"
      state: present
    when: when downstream|bool and install_foreman|bool

  - name: Install Red Hat Satellite
    yum:
      name: satellite
      state: present
    when: when downstream|bool and install_foreman|bool

  - name: Turn off Firewall
    service:
      name: firewalld
      state: stopped
      enabled: no
    when: when downstream|bool and install_foreman|bool

  - name: Download Configs to drop in for installer
    get_url:
      url: http://10.8.105.2/pub/sat/config_files.tar.gz
      dest: /root/config_files.tar.gz
      force: yes
    when: when downstream|bool and install_foreman|bool

  - name: Untar config_files and place in /etc
    command: tar --overwrite -xvf /root/config_files.tar.gz -C /
    args:
      warn: no
    register: untar
    when: when downstream|bool and install_foreman|bool

  - name: Download PostgresDB
    get_url:
      url: http://10.8.105.2/pub/sat/pgsql_data.tar.gz
      dest: /root/pgsql_data.tar.gz
      force: yes
    when: when downstream|bool and install_foreman|bool

  - name: Download MongoDB
    get_url:
      url: http://10.8.105.2/pub/sat/mongo_data.tar.gz
      dest: /root/mongo_data.tar.gz
      force: yes
    when: when downstream|bool and install_foreman|bool

  - name: Extract MongoDB
    command: tar --overwrite -xvf /root/mongo_data.tar.gz -C /
    args:
      warn: no
    register: untar
    when: when downstream|bool and install_foreman|bool

  - name: Extract PostgresDB
    command: tar --overwrite -xvf /root/pgsql_data.tar.gz -C /
    args:
      warn: no
    register: untar
    when: when downstream|bool and install_foreman|bool

  - name: Run Installer to get application in a good spot
    command: satellite-installer --scenario satellite -v -s --disable-system-checks
    register: install
    when: when downstream|bool and install_foreman|bool

  - name: Perform upgrade with Installer to prevent any issues with the databases
    command: satellite-installer --scenario satellite -v -s --disable-system-checks --upgrade
    register: upgrade
    when: when downstream|bool and install_foreman|bool

  - name: Clean up root directory of backups
    file:
      path: "/root/{{ item }}"
      state: absent
    with_items:
      - mongo_data.tar.gz
      - pgsql_data.tar.gz
      - config_files.tar.gz
    when: when downstream|bool and install_foreman|bool
